import tweepy
import time

print('this is my twitter bot')

CONSUMER_KEY = #these are keys devloped through my personal twitter account
CONSUMER_SECRET = #you would import your own keys here.
ACCESS_KEY =
ACCESS_SECRET = 

auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)
api = tweepy.API(auth)

FILE_NAME = 'last_seen_id.txt' #there is a file that updates the id of the last seen tweet

def retrieve_last_seen_id(file_name): #retrieves contents of the file
	f_read = open(file_name, 'r')
	last_seen_id = int(f_read.read().strip())
	f_read.close()
	return last_seen_id #collects the value of the last seen id
	
def store_last_seen_id(last_seen_id, file_name):
	f_write = open(file_name, 'w')
	f_write.write(str(last_seen_id))
	f_write.close()
	return
	
def reply_to_tweets():
	print('retrieving and replying to tweets...')
	#1063086437145497601 first one was used during development test
	last_seen_id = retrieve_last_seen_id(FILE_NAME)	
	mentions = api.mentions_timeline( #connects to twitters pre made api for mentions
		last_seen_id,
		tweet_mode='extended')
	
	for mention in reversed(mentions): #collects all mentions in order of oldest first
		print(str(mention.id) + ' - ' + mention.full_text)
		last_seen_id = mention.id #updates the last seen id t that of the latest mentioned id
		store_last_seen_id(last_seen_id, FILE_NAME)
		if '#test' in mention.full_text.lower(): #checks to see if the specific string is used in the mention
			print('found #Test')
			print('responding')
			api.update_status('@' + mention.user.screen_name + #the context of the reply tweet
				'#Hello to you', mention.id)
			
while True: #continually run the function with a 60 seconds refresh
	reply_to_tweets()
	time.sleep(60)
