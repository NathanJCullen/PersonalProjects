#This twitter bot uses the weather API file found elsewhere in the repository.
#This bot searches twitter every 20 seconds to see if there is a specific hashtag within any tweets. If there is, the bot finds the
#word following the hashtag and runs it through a weather API and returns the current temperature and current conditions.
#This script was updated on 27/03/2019 to include a new more accurate API and to also fix a couple of bugs.

import tweepy
import time
import requests


CONSUMER_KEY = ''
CONSUMER_SECRET = ''
ACCESS_KEY = ''
ACCESS_SECRET = ''

auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)
api = tweepy.API(auth)

FILE_NAME = 'last_seen_id.txt'

def findweather(lat, lon):
	weatherkey = ''
	forecastrequest = requests.get('https://api.darksky.net/forecast/%s/%s,%s'%(weatherkey, lat, lon))
	forecastresponse = forecastrequest.json()
	currenttemp = forecastresponse['currently']['temperature']
	c = (currenttemp - 32) * (5/9)
	c = round(c, 1)
	return c

def findcoords(city):
	jsonrequest = requests.get('https://nominatim.openstreetmap.org/?format=json&addressdetails=1&q=%s&format=json&limit=1'%city)
	jsonresponse = jsonrequest.json()

	latitude = jsonresponse[0]['lat']
	longitude = jsonresponse[0]['lon']
	#city = jsonresponse[0]['city']
	coords = (latitude, longitude)
	return coords#city


def retrieve_last_seen_id(file_name):
	f_read = open(file_name, 'r')
	last_seen_id = int(f_read.read().strip())
	f_read.close()
	return last_seen_id

def store_last_seen_id(last_seen_id, file_name):
	f_write = open(file_name, 'w')
	f_write.write(str(last_seen_id))
	f_write.close()
	return

def find_city(tweet):
    city = tweet.split()[1]
    return city

def reply_to_tweets():
    print('retrieving and replying to tweets...')
	#1063086437145497601 first one was used during development test
    last_seen_id = retrieve_last_seen_id(FILE_NAME)
    mentions = api.mentions_timeline(
            last_seen_id,
            tweet_mode='extended')

    for mention in reversed(mentions):
        print(str(mention.id) + ' - ' + mention.full_text)
        last_seen_id = mention.id
        tweet = mention.full_text.lower()
        city = find_city(tweet)
        coords = findcoords(city)
        lat = coords[0]
        lon = coords[1]
        print('Found Tweet')
        print('Responding')
        api.update_status('@' + mention.user.screen_name + " " + "The current temperature is : " + str(findweather(lat, lon)) + 'degrees celsius' , mention.id)
        store_last_seen_id(last_seen_id, FILE_NAME)


while true:
	reply_to_tweets()
	time.sleep(20)
